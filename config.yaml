output_folder: output
# root folders where all the experimental data files are
datafolder: ./data
# raw data stack path - 4D numpy files extracted from Swift
datasets: Spectrum Image (Dectris)_100mrad_pelz_unfiltered_*.npy

# unwarp_workflow:
#   unwarp_distor_mat:
#     # tilt tableau datasets, ronchicam, 4D stack (required, type: Path_fr)
#     # unwarp_ref: Spectrum Image (RonchiCam)_100mrad_pelz_tiltmap-002.npy
#     # tilt tableau datasets, dectris, 4D stack (required, type: Path_fr)
#     unwarp_warp: Spectrum Image (Dectris)_100mrad_pelz_tiltmap.npy
#     # if false, the code expects a text file of beam positions in the format 'x_pos y_pos', with each location a new line (type: bool, default: true)
#     find_points_ref: true

#     # if false, the code expects a text file of beam positions in the format 'x_pos y_pos', with each location a new line (type: bool, default: true)
#     find_points_warp: true

#     # how far apart (in pixels) do the detected disks in the ronchigram stack need to be, to be considered a valid disk (type: int, default: 20)
#     dist_min: 20

#     # look at the histogram to figure out the correct number (type: bool, default: false)
#     plot_dist_min_flag: false

#     # this is slow, so return to false once the parameters above and below are found. (type: bool, default: false)
#     plot_flag: false

#     # the radius used in im_tools.mask_circ. 15 good for 100mrad_pelz, 30 good for DiffRef (type: int, default: 15)
#     radius_ref: 15

#     # the radius used in im_tools.mask_circ (type: int, default: 20)
#     radius_warp: 20

#     # threshhold value for im_tools.com_im (type: int, default: 45)
#     thresh_ref: 45

#     # threshhold value for im_tools.com_im (type: int, default: 4)
#     thresh_warp: 4

#     # this is currently in beta and not to be used without explanation from Tom, in which order the data should be processsed. These require variables defined from find_points_ref and find_points_warp (type: bool, default: false)
#     use_json: true

#     # this is currently in beta (type: Path_frw_skip_check, default: null)
#     precomputed_json: /testpool/ops/pablofernandezrobledo/Workflows/nextflow_preprocessing/data/Spectrum
#       Image (RonchiCam)_100mrad_pelz_tiltmap.json

#     # save dewarping parameters once all are successfully found as text files in the folder (type: bool, default: false)
#     save_all_precompute: true

#     # amount of cores to be used (required, type: int)
#     cpu_count: 20

#   unwarp_apply:
#     # amount of cores to be used (required, type: int)
#     cpu_count: 20

adorym_workflow:
  make_adorym_data:
    # diffraction pattern binning (type: int, default: 4)
    bin_Factor: 1 #TODO

    # list defining how big the subarrays/tiles are (pixels, first two dimesions) if same as scan_pos_list aka original first two dim of data no tilling is performed ([0,0] for this). Uses https://github.com/the-lay/tiler (type: list of 2 int, default: [0,0])
    split_in_subarray_size: [0,0]

    # Specifies overlap between subarrays, overlap is in positions. (type: int, default: 0)
    overlap: 0
    
    # crop or pad the diffraction pattern, negative pads with edge values, positives crops. No combination supported yet [crop_pad_row_first, crop_pad_row_last, crop_pad_colum_first, crop_pad_colum_last] (type: list of 4 int, default: [0, 0, 0, 0])
    crop_pad_diffraction: [0,0,0,0]

    # # list defining how many scan position there are by giving x and y amounts (type: list of 2 int, default: [75, 75])
    scan_pos_list: [200,200] #TODO

    # Size of the electron probe, a negative entry in the first index -> uses the resulting diffraction pattern size (type: list of 2 int, default: [-1, -1])
    # probe_size: [213,213] 

    # Rotate patterns 180 degrees (type: bool, default: false)
    rotate_180: true

    # the pixel size of the reconstruction in angstroms (type: float)
    px_size_ang: # wrong? 1.035809e-11

    # start with "_"!, parameters will be the autoappended (type: str, default: _adorym_original)
    out_name_append: _adorym_original_shifted
    
    # amount of cores to be used (required, type: int)
    cpu_count: 21

  # make_adorym_positions:
    #  (type: int, default: 50)
    # N_scan_x: 75

    # #  (type: int, default: 50)
    # N_scan_y: 75

    # Angstroms (type: float)
    scan_Step_Size_x_A: 5

    # Angstroms (type: float)
    scan_Step_Size_y_A: 5

    # the pixel size of the reconstruction in meters (type: float, default: 1e-10)
    # px_size_ang_m : 0

    # rotation angle in degrees (type: float, default: 0)
    rot_ang_deg: 333.68

    # How much vacuum should be put. Measured from the positions bounding box and in integer units of scan_Step_Size (type: int, default: 0)
    extra_vacuum_space : 6
  
  make_adorym_reconstruct: # Adorym params settings, strings MUST be decorated like so: '"string"'
    theta_st : 0
    theta_end : 0
    n_theta : 1
    theta_downsample : 1
    n_epochs : 1 # for testing
    obj_size : (0,0,1) # # x,y configured in make_*_data
    alpha_d : 0
    alpha_b : 0
    gamma : 0
    # learning_rate : 4e-05
    learning_rate : 4e-05
    center : 0
    energy_ev : 254811.087
    psize_cm : 1.009e-09
    minibatch_size : 1400 #75**2 # 1000 # 10Gb #2000 brakes for  [200,200]
    n_batch_per_update : 1
    output_folder : None
    cpu_only : False
    save_path : '"."'
    multiscale_level : 1
    n_epoch_final_pass : None
    save_intermediate : True
    full_intermediate : True
    initial_guess : None
    n_dp_batch : 100 
    probe_type : '"ifft"'
    n_probe_modes : 1
    probe_initial : None
    optimize_probe : False
    forward_algorithm : '"fresnel"'
    object_type : '"phase_only"'
    finite_support_mask : None
    free_prop_cm : '"inf"'
    optimizer : '"cg"'
    two_d_mode : True
    distribution_mode : None
    use_checkpoint : False
    optimize_all_probe_pos : False
      #'loss_function_type': 'poisson',
      #'poisson_multiplier': 88.0,
    save_history : True
    backend : '"pytorch"' #
    randomize_probe_pos : False
    pure_projection : False
    safe_zone_width : 50 
    optimize_probe_defocusing : False
    precalculate_rotation_coords : False
    unknown_type : '"real_imag"'


  adorym_reconstruct:
    test: a
  adorym_join:
    #How much to delete from outside the tile (to be automated), expressed for now in arbitrary units") (type: int, default: 10)
    clear_extend: 10
    # How big should the windowing be, expressed for now in arbitrary units (type: int, default: 1)
    half_window_lenght: 1
    # What windowing function to smooth the overlap of the tiles. Choose from scipy.signal.windows.get_window (https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.windows.get_window.html#scipy.signal.windows.get_window) (type: str, default: hann)
    window_name: hann